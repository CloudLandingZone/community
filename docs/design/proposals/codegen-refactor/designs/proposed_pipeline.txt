title Proposed Code Generator Pipeline

actor User
participant generateAPIs()
participant generateInferredModel()
participant ackgenerate
participant Common
participant Model
participant Github
participant $SERVICE-controller

User->generateInferredModel(): ./ack-generate infer-model $SERVICE
note over User, generateInferredModel():infer-model args:\n- service\n- template-dirs\n- cache-dir\n- version\n- generator-config-path\n- metadata-config-path\n- aws-sdk-go-version
generateInferredModel()->Common: ensureSDKRepo()
Common-->Github:
note over Common, Github: Clones and caches aws-sdk-go repo, if not available locally
Github-->Common:
Common->generateInferredModel(): return repo
generateInferredModel()->Model: loadModelWithAPIVersion(svcAlias, version)
note over generateInferredModel(), Model: uses ackgenconfig and aws-sdk to load and cache model
Model-->generateInferredModel(): return model
generateInferredModel()->User: inferred-model created and cached at ./cache/aws-controllers-k8s/ack-inferred-model.json
User->generateAPIs(): ./ack-generate apis $SERVICE
note over User, generateAPIs():api args:\n- service\n- cache-dir (for sdk and inferred-model)\n- template-dirs
generateAPIs()->Common: GetInferredModel()
Common-->generateAPIs(): return inferredModel, nil (fetches from cache or exits)
generateAPIs()->ackgenerate: ackgenerate.APIs(model, templateDir)
ackgenerate->generateAPIs(): return templateSet, nil
generateAPIs()->$SERVICE-controller: execute templates & write API files to output repo
generateAPIs()->User: API files generated!
